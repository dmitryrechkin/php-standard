<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="DmitryRechkin">
	<description>Coding standard based on PSR-12 with some additions.</description>

	<arg name="tab-width" value="4"/>

	<!-- Include the whole PSR-12 standard -->
	<rule ref="PSR12">
		<!-- exclude usage of spaces for indentation-->
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<exclude name="PSR1.Files.SideEffects"/>
	</rule>

	<rule ref="PSR12"/>

	<!-- https://github.com/sirbrillig/VariableAnalysis/ -->
	<rule ref="VariableAnalysis"/>
	<rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis">
		<properties>
			<property name="allowUnusedFunctionParameters" value="true"/>
		</properties>
	</rule>

	<!-- Use tabs for indentation-->
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>

	<!-- Arrays -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.Arrays.ArrayIndent"/>
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>

	<!-- Allow double quotes only when there is a variable inside -->
	<rule ref="Squiz.Strings.DoubleQuoteUsage">
		<exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
	</rule>

	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true" />
			<property name="ignoreSpacingBeforeAssignments" value="false" />
		</properties>
	</rule>

	<!-- Slevomat Coding Standards - @see https://github.com/slevomat/coding-standard -->
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
	<rule ref="SlevomatCodingStandard.Exceptions.DisallowNonCapturingCatch"/>
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
	<rule ref="SlevomatCodingStandard.PHP.DisallowDirectMagicInvokeCall"/>
	<rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
	<rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>
	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
	<rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
	<rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition"/>
	<!--rule ref="SlevomatCodingStandard.Classes.DisallowMultiPropertyDefinition"/-->
	<rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration"/>
	<rule ref="SlevomatCodingStandard.Files.LineLength">
		<properties>
			<property name="lineLengthLimit"  value="300"/>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
	<rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
	<rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
	<rule ref="SlevomatCodingStandard.Commenting.DeprecatedAnnotationDeclaration"/>
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
	<rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
	<!--<rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>-->
	<rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
	<rule ref="SlevomatCodingStandard.Classes.PropertySpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.MethodSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.ParentCallSpacing"/>
	<rule ref="SlevomatCodingStandard.Classes.ConstantSpacing"/>
	<rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>
	<rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing"/>
	<rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing"/>
	<rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing"/>
	<rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>
	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
	<rule ref="SlevomatCodingStandard.Classes.ClassStructure">
		<properties>
			<property name="groups" type="array">
				<element value="uses"/>
				<element value="enum cases"/>
				<element value="constants"/>
				<element value="properties"/>
				<element value="static properties"/>
				<element value="static constructors"/>
				<element value="constructor"/>
				<element value="destructor"/>
				<element value="magic methods"/>
				<element value="all public methods"/>
				<element value="all protected methods"/>
				<element value="all private methods"/>
			</property>
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Functions.StrictCall">
	</rule>
	<rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators">
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint">
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint">
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint">
	</rule>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint">
	</rule>
	<!--<rule ref="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint">
	</rule>-->
	<rule ref="SlevomatCodingStandard.Functions.DisallowEmptyFunction">
	</rule>
	<rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
		<properties>
			<property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
		</properties>
	</rule>
	<!--<rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed">
	</rule>-->
	<rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit.UselessElseIf"/>
	<rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit.UselessElse">
	</rule>
	<!--<rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable">
	</rule>-->
	<rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator">
	</rule>
	<rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true"/>
		</properties>
	</rule>
	<!--<rule ref="SlevomatCodingStandard.PHP.UselessParentheses">
	</rule>-->
	<!--<rule ref="SlevomatCodingStandard.Functions.UnusedParameter">
	</rule>-->
	<rule ref="SlevomatCodingStandard.Functions.FunctionLength">
		<properties>
			<property name="maxLinesLength" value="250"/>
		</properties>
	</rule>

	<!-- Documenting -->
	<rule ref="Squiz.Commenting.FunctionComment">
		<properties>
			<property name="skipIfInheritdoc" value="true"/>
		</properties>
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/> <!-- Can add back in once https://github.com/squizlabs/PHP_CodeSniffer/pull/3139 is fixed -->
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
		<exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
		<exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
	</rule>

	<rule ref="Generic.Formatting.SpaceAfterNot">
		<properties>
			<property name="spacing" value="0" />
		</properties>
	</rule>

	<rule ref="Generic.Files.LineLength">
		<exclude-pattern>*/templates/*</exclude-pattern>
		<properties>
			<property name="lineLimit" value="150"/>
		</properties>
	</rule>
	<!-- exclude minified files -->
	<!-- The following rule excludes more files than expected -->
	<!--<exclude-pattern>*.min.*</exclude-pattern>-->
</ruleset>