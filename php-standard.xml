<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="DmitryRechkin">
	<description>Minimal stable coding standard based on PSR-12 - no SlevomatCodingStandard to prevent hanging.</description>

	<arg name="tab-width" value="4"/>

	<!-- Include PSR-12 as base, but exclude problematic rules -->
	<rule ref="PSR12">
		<!-- Keep your tab indentation preference -->
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
		<!-- Allow side effects for flexibility -->
		<exclude name="PSR1.Files.SideEffects"/>
	</rule>

	<!-- https://github.com/sirbrillig/VariableAnalysis/ -->
	<rule ref="VariableAnalysis"/>
	<rule ref="VariableAnalysis.CodeAnalysis.VariableAnalysis">
		<properties>
			<property name="allowUnusedFunctionParameters" value="true"/>
		</properties>
	</rule>

	<!-- Your custom indentation with tabs -->
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>

	<!-- Arrays - stable rules only -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.Arrays.ArrayIndent"/>
	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
	<rule ref="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast"/>

	<!-- String preferences - your current settings -->
	<rule ref="Squiz.Strings.DoubleQuoteUsage">
		<exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
	</rule>

	<!-- Operator spacing -->
	<rule ref="Squiz.WhiteSpace.OperatorSpacing">
		<properties>
			<property name="ignoreNewlines" value="true" />
			<property name="ignoreSpacingBeforeAssignments" value="false" />
		</properties>
	</rule>

	<!-- Stable SlevomatCodingStandard rules that were tested and work -->
	<rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
	<rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
	<rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
	<rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
	<rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
	<rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>
	<rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
	<rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
	<rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>
	
	<!-- Additional stable formatting rules -->
	<rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>
	<rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition"/>
	<rule ref="SlevomatCodingStandard.Classes.TraitUseDeclaration"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
	<rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
	<rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
	<rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing"/>
	<rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing"/>
	<rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>

	<!-- Function Documentation - exactly what you want -->
	<rule ref="Squiz.Commenting.FunctionComment">
		<properties>
			<property name="skipIfInheritdoc" value="true"/>
		</properties>
		<exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
		<exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
		<exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/>
		<!-- Keeps: function description, @param with types, @return -->
	</rule>

	<!-- Basic formatting that works reliably -->
	<rule ref="Generic.Formatting.SpaceAfterNot">
		<properties>
			<property name="spacing" value="0" />
		</properties>
	</rule>

	<!-- Your line length preferences -->
	<rule ref="Generic.Files.LineLength">
		<exclude-pattern>*/templates/*</exclude-pattern>
		<properties>
			<property name="lineLimit" value="150"/>
		</properties>
	</rule>

	<!-- Exclude vendor directories to prevent hanging -->
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*.min.*</exclude-pattern>
</ruleset>